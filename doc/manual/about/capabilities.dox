/*! \page about_capabilities_page 1.2 Capabilities

\section features_potential_sec Potential Energy

All of the Simpatico programs use a potential energy that can contain:

- nonbonded pair interactions

- covalent bond (2 body), angle (3 body) and dihedral (4 body) potentials

- external one-body potentials  

Several different choices of potential energy function are provided for the nonbonded pair interaction and for each type of covalent interactions. Others are easily added. To simplify integration of MC and MD simulations, all programs are currently restricted to models with differentiable potentials (i.e., not hard spheres), with no constraints on bond lengths or bond angles. The default version of each program currently includes only non-bonded pair interactions and covalent bond interactions. Other types of interactions can be enabled by setting appropriate flags and recompiling.

Classes that represent particular potential energy functions, such as a Lennard-Jones pair potential, are referred to in Simpatico as "interactions". The source files for all interactions are in src/inter directory, and they are all defined in the "Inter" C++ namespace.  The same set of interaction classes is available in the mcSim, mdSim, and ddSim programs.  

Long-range electrostatic potentials have not yet been implemented in any of the programs. This is one of the most important missing feature that would be required to make the package suitable for more atomistic models.

\section features_algorithms_sec Simulation Algorithms

For single-processor MD simulations, mdSim currently provides the 
following integrators:
<ul>
  <li> NVE velocity Verlet </li>
  <li> NVT Nose-Hoover </li>
  <li> NVT dissipative particle dynamics (DPD) </li>
  <li> NPH Anderson barostat </li>
</ul>
For parallel domain-decomposition Md simulations, DdSim currently 
provides:
<ul>
  <li> NVE velocity Verlet </li>
  <li> NVT Nose-Hoover thermostate </li>
  <li> NPH Anderson barostat </li>
  <li> NPT Nose-Hoover thermostat, Anderson barostat </li>
</ul>
All of the MD integrators except the mdSim DPD integrator use reversible,
symplectic algorithms. The ddSim NPT integrator allows constant pressure
simulations in cubic, tetragonal or orthorhombic simulation cells. 

For single-processor Monte-Carlo simulation, mcSim currently provides the 
following MC moves, and a few others:
<ul>
   <li> Single atom displacement </li>
   <li> Rigid molecule displacement </li>
   <li> Hybrid MC moves (short NVE or NPH simulations as proposed MC moves) 
        in NVT and NPT ensembles. </li>
   <li> Reptation move for linear chains </li>
   <li> Configuration bias regrowth of all or part of a linear chain. </li>
   <li> Double rebridging for linear chains. </li>
   <li> Double rebridging moves for ring polymers. </li>
   <li> End-swap move for linear heteropolymers (e.g., diblock copolymers) </li>
   <li> Semi-grand canonical move (for, e.g., homopolymer blends) </li>
</ul>
The configuration bias and rebridging move algorithms were all designed for 
use with flexible bead-spring models of polymers, and have been not modified
for use with models with strong angle potentials.

\section features_hoomd_sec GPU Acceleration: Integration with Hoomd-blue

Simpatico provides an optional module that allows the use of the <a href=http://codeblue.umich.edu/hoomd-blue/>Hoomd-blue</a> code for MD on the GPU as a fast engine for hybrid MC simulations.  In this mode, an instance of Hoomd-blue is used to implement a hybrid MC move within an mcSim simulation. Short NVE (for NVT ensemble) or NPH (for NPT ensembles) MD simulations are carried out on a GPU, while the main loop is implemented on the CPU, as are any other MC moves.  Integration with Hoomd-blue provides a dramatic increase in the speed of MD and HMC simulations: We obtain a speed-up by approximately a factor of 30 for for bead-spring polymer melts with repulsive Lennard-Jones (i.e., Weeks-Chandler-Anderson) pair interactions.

\section features_analysis_sec Data Analysis

Simpatico is distributed with a collection of classes for statistical analysis, referred to as "diagnostics". 

The diagnostic classes available for use with the single-processor mcSim and mdSim programs include classes to evaluate:
<ul>
  <li> Thermodynamic properties (energy and stress components) </li>
  <li> Full and partial radial distribution functions (in coordinate space). </li>
  <li> Structure factors (in Fourier space). </li>
  <li> Intramolecular correlation functions. </li>
  <li> Molecular radii of gyration </li>
  <li> Mean-squared distances between specific atoms in a molecule.</li>
  <li> Mean-squared displacements for specific atoms or molecular centers-of-mass. </li>
  <li> Auto-correlation functions for vector separations of atom pairs. </li>
  <li> Intermediate scattering (van Hove) function S(k, t) . </li>
</ul>
All mcSim and mdSim data analysis classes can be used either on-the-fly, during a simulation, or for post-processing of a trajectory file or a sequence of configuration dump files. Postprocessing is done by the the mcSim and mdSim programs, by invoking a command that replaces the main simulation loop by a loop that reads a sequence of configurations from file. 

A smaller set of diagnostics is distributed for use on-the-fly with ddSim. Classes are available to evaluate thermodynamic properties (energy contributions and stress components) and structure factors. MD trajectories from ddSim simulations can also be post-processed by using mcSim or msSim as analysis tools. 

<BR>
\ref about_goals_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref about_page (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref about_contributors_page (Next)

*/
